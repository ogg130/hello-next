{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\repos\\\\hello-next\\\\pages\\\\index.js\";\n\n/* Simple two-way binding example */\nimport React, { useState } from \"react\";\n\nvar InputElement = function InputElement() {\n  /* use useState to track what is being typed into the field,\r\n  initialized as \"\" */\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n  /* use useState to track a history of changes typed into the \r\n  field, initialized as empty array */\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      historyList = _useState4[0],\n      setHistoryList = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    /*onChange gets fired on every keystroke */\n    onChange: function onChange(e) {\n      setInputText(e.target.value);\n      setHistoryList([].concat(_toConsumableArray(historyList), [e.target.value]));\n    },\n    placeholder: \"Enter Some Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), inputText, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, historyList.map(function (rec) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, rec);\n  })));\n};\n\nexport default InputElement;","map":{"version":3,"sources":["D:\\repos\\hello-next\\pages\\index.js"],"names":["React","useState","InputElement","inputText","setInputText","historyList","setHistoryList","e","target","value","map","rec"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB;;AADyB,kBAGSD,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,MAGlBE,SAHkB;AAAA,MAGPC,YAHO;AAKzB;;;;AALyB,mBAOaH,QAAQ,CAAC,EAAD,CAPrB;AAAA;AAAA,MAOlBI,WAPkB;AAAA,MAOLC,cAPK;;AASzB,SACE,0CACE;AACE;AACA,IAAA,QAAQ,EAAE,kBAAAC,CAAC,EAAI;AACbH,MAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACAH,MAAAA,cAAc,8BAAKD,WAAL,IAAkBE,CAAC,CAACC,MAAF,CAASC,KAA3B,GAAd;AACD,KALH;AAME,IAAA,WAAW,EAAC,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUGN,SAVH,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,WAAW,CAACK,GAAZ,CAAgB,UAAAC,GAAG,EAAI;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,GAAN,CAAP;AACD,GAFA,CADH,CAbF,CADF;AAqBD,CA9BD;;AAgCA,eAAeT,YAAf","sourcesContent":["/* Simple two-way binding example */\r\nimport React, { useState } from \"react\";\r\n\r\nconst InputElement = () => {\r\n  /* use useState to track what is being typed into the field,\r\n  initialized as \"\" */\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  /* use useState to track a history of changes typed into the \r\n  field, initialized as empty array */\r\n  const [historyList, setHistoryList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        /*onChange gets fired on every keystroke */\r\n        onChange={e => {\r\n          setInputText(e.target.value);\r\n          setHistoryList([...historyList, e.target.value]);\r\n        }}\r\n        placeholder=\"Enter Some Text\"\r\n      />\r\n      <br />\r\n      {inputText}\r\n      <hr />\r\n      <br />\r\n      <ul>\r\n        {historyList.map(rec => {\r\n          return <div>{rec}</div>;\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputElement;\r\n"]},"metadata":{},"sourceType":"module"}